"""add_achievements_and_nursery_models

Revision ID: 2c0d0c4c83cb
Revises: eca90a7d28b5
Create Date: 2025-06-28 23:42:52.212689

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2c0d0c4c83cb'
down_revision = 'eca90a7d28b5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('local_nurseries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('business_type', sa.String(length=50), nullable=True),
    sa.Column('specialties', sa.JSON(), nullable=True),
    sa.Column('services', sa.JSON(), nullable=True),
    sa.Column('operating_hours', sa.JSON(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_local_nurseries'))
    )
    op.create_table('plant_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('achievement_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('badge_color', sa.String(length=20), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('unlock_criteria', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plant_achievements'))
    )
    op.create_table('nursery_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nursery_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_pattern', sa.JSON(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('skill_level', sa.String(length=20), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('materials_provided', sa.Text(), nullable=True),
    sa.Column('requires_registration', sa.Boolean(), nullable=True),
    sa.Column('registration_deadline', sa.DateTime(), nullable=True),
    sa.Column('contact_info', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nursery_id'], ['local_nurseries.id'], name=op.f('fk_nursery_events_nursery_id_local_nurseries')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nursery_events'))
    )
    op.create_table('nursery_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nursery_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('review_text', sa.Text(), nullable=True),
    sa.Column('plant_quality_rating', sa.Integer(), nullable=True),
    sa.Column('service_rating', sa.Integer(), nullable=True),
    sa.Column('price_rating', sa.Integer(), nullable=True),
    sa.Column('selection_rating', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_verified_purchase', sa.Boolean(), nullable=True),
    sa.Column('visit_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nursery_id'], ['local_nurseries.id'], name=op.f('fk_nursery_reviews_nursery_id_local_nurseries')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_nursery_reviews_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nursery_reviews'))
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.UUID(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.Column('progress_data', sa.JSON(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['plant_achievements.id'], name=op.f('fk_user_achievements_achievement_id_plant_achievements')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_achievements_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_achievements'))
    )
    op.create_table('user_nursery_favorites',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('nursery_id', sa.UUID(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('last_visited', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nursery_id'], ['local_nurseries.id'], name=op.f('fk_user_nursery_favorites_nursery_id_local_nurseries')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_nursery_favorites_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_nursery_favorites'))
    )
    op.create_table('user_stats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('total_plants', sa.Integer(), nullable=True),
    sa.Column('active_plants', sa.Integer(), nullable=True),
    sa.Column('plants_identified', sa.Integer(), nullable=True),
    sa.Column('total_care_logs', sa.Integer(), nullable=True),
    sa.Column('care_streak_days', sa.Integer(), nullable=True),
    sa.Column('longest_care_streak', sa.Integer(), nullable=True),
    sa.Column('last_care_activity', sa.DateTime(), nullable=True),
    sa.Column('questions_asked', sa.Integer(), nullable=True),
    sa.Column('questions_answered', sa.Integer(), nullable=True),
    sa.Column('helpful_answers', sa.Integer(), nullable=True),
    sa.Column('trades_completed', sa.Integer(), nullable=True),
    sa.Column('total_achievements', sa.Integer(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_stats_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_stats')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_stats_user_id'))
    )
    op.create_table('plant_milestones',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('plant_id', sa.UUID(), nullable=False),
    sa.Column('milestone_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.Column('photo_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['user_plants.id'], name=op.f('fk_plant_milestones_plant_id_user_plants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plant_milestones'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('plant_milestones')
    op.drop_table('user_stats')
    op.drop_table('user_nursery_favorites')
    op.drop_table('user_achievements')
    op.drop_table('nursery_reviews')
    op.drop_table('nursery_events')
    op.drop_table('plant_achievements')
    op.drop_table('local_nurseries')
    # ### end Alembic commands ###